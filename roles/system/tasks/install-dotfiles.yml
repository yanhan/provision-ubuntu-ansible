---
- name: check if oh my zsh is installed
  shell: test -d .oh-my-zsh
  args:
    chdir: "{{ home_path }}"
  register: oh_my_zsh_installed
  ignore_errors: true

- name: clone oh my zsh repository
  shell: >
    git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh &&
      cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
  when: oh_my_zsh_installed.rc != 0
  tags:
    - skip_ansible_lint

- name: check if dotfiles git repository exists
  shell: test -d dotfiles
  args:
    chdir: "{{ home_path }}"
  ignore_errors: true
  register: dotfiles_git_repo_exists

- name: clone dotfiles git repository if it does not exist
  shell: git clone git://github.com/yanhan/dotfiles.git  # noqa command-instead-of-module
  args:
    chdir: "{{ home_path }}"
  when: dotfiles_git_repo_exists.rc != 0

- name: dotfiles repo - check git remote origin is in git protocol
  shell: git remote -v | grep '^origin' | grep 'git@github.com:'  # noqa command-instead-of-module
  args:
    chdir: "{{ dotfiles_repo_path }}"
  register: dotfiles_origin_check
  ignore_errors: true
  when: dotfiles_git_repo_exists.rc != 0

- name: dotfiles repo - change remote origin
  shell: git remote rm origin && git remote add origin git@github.com:yanhan/dotfiles.git  # noqa command-instead-of-module
  args:
    chdir: "{{ dotfiles_repo_path }}"
  when: dotfiles_git_repo_exists.rc != 0 and dotfiles_origin_check.rc != 0

- name: setup dotfiles repository
  shell: python setup_home_folder_dotfiles.py gitconfig tmux.conf vimrc zshrc
  args:
    chdir: "{{ dotfiles_repo_path }}"
  when: dotfiles_git_repo_exists.rc == 0

- name: Ensure ${HOME}/.vim/autoload exists
  file:
    path: "{{ home_path }}/.vim/autoload"
    state: directory
    mode: 0750

- name: Install vim-plug
  copy:
    src: plug.vim
    dest: "{{ home_path }}/.vim/autoload/plug.vim"
    mode: 0750
  register: just_installed_vim_plug

- name: Install Vim plugins
  shell: vim +PlugInstall +qall
  when: just_installed_vim_plug.changed
  tags:
    - skip_ansible_lint
