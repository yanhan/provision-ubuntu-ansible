- name: check {{ apt_sources_list }} to see if sg mirror is used
  shell: "cat {{ apt_sources_list }} | perl -ne 'print if /^(deb|deb-src) http:\\/\\/sg.archive.ubuntu.com/' | wc -l"
  register: nr_lines_with_sg_mirror_in_apt_sources

- name: replace {{ apt_sg_mirror }} mirrors with {{ apt_osuosl_mirror }} mirror
  shell: perl -pi -e 's#^(deb|deb-src) {{ apt_sg_mirror }}#\1 {{ apt_osuosl_mirror }}#' /etc/apt/sources.list
  when: nr_lines_with_sg_mirror_in_apt_sources.stdout | int > 0

- name: "Add virtualbox key"
  apt_key:
    file: "{{ repo_files_path }}/oracle_vbox_2016.asc"
    id: "B9F8D658297AF3EFC18D5CDFA2F683C52980AECF"
  become: yes

- name: "Add virtualbox apt repository"
  apt_repository:
    repo: "deb https://download.virtualbox.org/virtualbox/debian bionic contrib"
  become: yes

- name: "Add sublime text apt key"
  apt_key:
    file: "{{ repo_files_path }}/sublimehq-pub.gpg"
    id: "1EDDE2CDFC025D17F6DA9EC0ADAE6AD28A8F901A"
  become: yes

- name: "Add sublime text apt repository"
  apt_repository:
    repo: "deb https://download.sublimetext.com/ apt/stable/"
  become: yes

- name: "Add Google Cloud apt key (also for k8s)"
  apt_key:
    url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
    keyring: /usr/share/keyrings/kubernetes-archive-keyring.gpg
  become: yes

- name: "Add k8s apt repository (for kubectl)"
  apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"
  become: yes

- name: "Add docker apt key"
  apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    id: "9DC858229FC7DD38854AE2D88D81803C0EBFCD88"
  become: yes

- name: "Get output of lsb_release -cs"
  shell: lsb_release -cs
  register: lsb_release_cs

- name: "Add docker apt repository"
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ lsb_release_cs.stdout }} stable"
  become: yes

# Refer to https://code.visualstudio.com/docs/setup/linux?msclkid=1ac46317bc6411ecb47fb8ff0f8c2151
- name: Add Microsoft packages apt key
  apt_key:
    file: "{{ repo_files_path }}/packages.microsoft.gpg"
    keyring: /etc/apt/trusted.gpg.d/packages.microsoft.gpg
  become: yes

- name: Add Microsoft apt repo
  lineinfile:
    line: "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main"
    path: /etc/apt/sources.list.d/vscode.list
    owner: root
    group: root
    create: yes
  become: yes

- name: Check if we need to perform apt-get update (if last update was > 1 day ago OR if we just replaced apt sg mirror)
  check_if_need_to_apt_get_update: cache_valid_time=86400
                                   nr_lines_with_sg_mirror_in_apt_sources={{ nr_lines_with_sg_mirror_in_apt_sources.stdout }}
  register: ag_update
  become: yes

- name: apt-get update
  apt: update_cache="yes"
  when: ag_update.need_to_update
  become: yes

- name: List the packages to install
  set_fact:
    ubuntu_packages:
      - apt-transport-https
      - ca-certificates
      - chromium-browser
      - code
      - containerd.io
      - curl
      - docker-ce
      - docker-ce-cli
      # get metadata of image files
      - exiftool
      - expat
      - ffmpeg
      - firefox
      - g++
      - gcc
      - gdb
      - gimp
      - git
      - gnupg-agent
      - htop
      - imagemagick
      - iptables-persistent
      - ipcalc
      - jq
      - keepass2
      - kubectl
      - libbz2-dev
      - libcurl4-openssl-dev
      - libexpat1-dev
      - libgmp-dev
      - liblzma-dev
      - libmysqlclient-dev
      - libncurses5-dev
      - libpcre3
      - libpcre3-dev
      - libreoffice-calc
      - libreoffice-writer
      - libsqlite3-dev
      - libssl-dev
      - libxml2-dev
      - lzma-dev
      - make
      - mc    # midnight commander
      - net-tools
      - neovim
      - octave
      - openjdk-8-jdk
      - protobuf-compiler
      - pwgen
      - pv
      - r-base
      - screen
      - scrot
      - sqlite3
      - sublime-text
      - tcl8.6
      - tcl8.6-dev
      - terraform
      - tk8.6
      - tk8.6-dev
      - tmux
      - unzip
      - vim
      - virtualbox-6.0
      - vlc
      - xchm
      - xclip
      - xsel
      - yamllint
      - zlib1g-dev
      - zsh

- name: install some packages
  apt: name="{{ ubuntu_packages }}"
       state=present
  become: yes

# From https://github.com/microsoft/vscode-postgresql/issues/77#issuecomment-701495023
- name: Check if libffi6 is installed
  shell: dpkg -L libffi6
  register: check_if_libffi6_installed
  ignore_errors: true
  changed_when: false

- name: Download libffi6
  get_url:
    url: "{{ libffi6.url }}"
    dest: "{{ libffi6.download_dest }}"
    sha256sum: "{{ libffi6.sha256sum }}"
  when: check_if_libffi6_installed.rc != 0

- name: Install libffi6
  apt:
    deb: "{{ libffi6.download_dest }}"
  become: yes
